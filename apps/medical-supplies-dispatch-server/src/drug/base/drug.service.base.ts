/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Drug as PrismaDrug } from "@prisma/client";

export class DrugServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DrugCountArgs, "select">): Promise<number> {
    return this.prisma.drug.count(args);
  }

  async drugs(args: Prisma.DrugFindManyArgs): Promise<PrismaDrug[]> {
    return this.prisma.drug.findMany(args);
  }
  async drug(args: Prisma.DrugFindUniqueArgs): Promise<PrismaDrug | null> {
    return this.prisma.drug.findUnique(args);
  }
  async createDrug(args: Prisma.DrugCreateArgs): Promise<PrismaDrug> {
    return this.prisma.drug.create(args);
  }
  async updateDrug(args: Prisma.DrugUpdateArgs): Promise<PrismaDrug> {
    return this.prisma.drug.update(args);
  }
  async deleteDrug(args: Prisma.DrugDeleteArgs): Promise<PrismaDrug> {
    return this.prisma.drug.delete(args);
  }
}
